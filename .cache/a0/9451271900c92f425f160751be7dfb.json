{"id":"src/hooks/useFormValues.ts","dependencies":[{"name":"C:\\Users\\user\\Desktop\\Projects\\NPM Package\\tsconfig.json","includedInParent":true,"mtime":1720276325577},{"name":"C:\\Users\\user\\Desktop\\Projects\\NPM Package\\package.json","includedInParent":true,"mtime":1720277018672},{"name":"react","loc":{"line":4,"column":24,"index":133},"parent":"C:\\Users\\user\\Desktop\\Projects\\NPM Package\\src\\hooks\\useFormValues.ts","resolved":"C:\\Users\\user\\Desktop\\Projects\\NPM Package\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useFormValues = void 0;\nvar react_1 = require(\"react\");\nvar useFormValues = function useFormValues() {\n  var _ref = (0, react_1.useState)({}),\n    _ref2 = _slicedToArray(_ref, 2),\n    values = _ref2[0],\n    setValues = _ref2[1];\n  return {\n    values: values,\n    setValues: setValues\n  };\n};\nexports.useFormValues = useFormValues;"},"sourceMaps":{"js":{"mappings":[{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":0}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":4}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":11}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":14}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":21}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":22}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":29}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":30}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":14,"column":0}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":14,"column":4}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":7,"column":26},"generated":{"line":14,"column":17}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":7,"column":29},"generated":{"line":14,"column":20}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":14,"column":29}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":7,"column":26},"generated":{"line":14,"column":42}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":7,"column":26},"generated":{"line":14,"column":43}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":14,"column":45}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":15,"column":2}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":15,"column":6}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":15,"column":10}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":30},"generated":{"line":15,"column":13}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":30},"generated":{"line":15,"column":14}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":30},"generated":{"line":15,"column":15}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":30},"generated":{"line":15,"column":17}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":30},"generated":{"line":15,"column":24}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":30},"generated":{"line":15,"column":25}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":38},"generated":{"line":15,"column":33}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":51},"generated":{"line":15,"column":35}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":51},"generated":{"line":15,"column":36}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":53},"generated":{"line":15,"column":37}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":54},"generated":{"line":15,"column":38}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":54},"generated":{"line":16,"column":4}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":54},"generated":{"line":16,"column":9}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":54},"generated":{"line":16,"column":12}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":54},"generated":{"line":16,"column":26}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":54},"generated":{"line":16,"column":27}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":54},"generated":{"line":16,"column":31}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":17,"column":4}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":15},"generated":{"line":17,"column":10}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":15},"generated":{"line":17,"column":13}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":15},"generated":{"line":17,"column":18}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":17},"generated":{"line":18,"column":4}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":26},"generated":{"line":18,"column":13}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":26},"generated":{"line":18,"column":16}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":11,"column":26},"generated":{"line":18,"column":21}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":13,"column":2},"generated":{"line":19,"column":2}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":13,"column":9},"generated":{"line":19,"column":9}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":13,"column":11},"generated":{"line":20,"column":4}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":13,"column":17},"generated":{"line":20,"column":10}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":13,"column":11},"generated":{"line":20,"column":12}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":13,"column":17},"generated":{"line":20,"column":18}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":13,"column":19},"generated":{"line":21,"column":4}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":13,"column":28},"generated":{"line":21,"column":13}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":13,"column":19},"generated":{"line":21,"column":15}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":13,"column":28},"generated":{"line":22,"column":2}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":13,"column":30},"generated":{"line":22,"column":3}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":23,"column":0}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":14,"column":1},"generated":{"line":23,"column":1}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":24,"column":0}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":24,"column":7}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":24,"column":8}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":7,"column":26},"generated":{"line":24,"column":21}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":7,"column":26},"generated":{"line":24,"column":24}},{"source":"src/hooks/useFormValues.ts","name":null,"original":{"line":7,"column":26},"generated":{"line":24,"column":37}}],"sources":{"src/hooks/useFormValues.ts":"import { useState } from 'react';\r\n\r\ninterface FormValues {\r\n  [key: string]: any;\r\n}\r\n\r\nexport const useFormValues = (): {\r\n  values: FormValues;\r\n  setValues: React.Dispatch<React.SetStateAction<FormValues>>;\r\n} => {\r\n  const [values, setValues] = useState<FormValues>({});\r\n\r\n  return { values, setValues };\r\n};\r\n"},"lineCount":null}},"error":null,"hash":"82389d6dba58349b9858fa27a88608c1","cacheData":{"env":{}}}